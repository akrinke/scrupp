--[[
-- $Id$
-- How to use the callbacks
-- See Copyright Notice in COPYRIGHT
--]]

-- create a resizable window
scrupp.init("Callback Demo", 600, 400, 32, false, true)

-- load the font module
require "font"
local font = Font("fonts/Vera.ttf", 20)
local msg1 = font:generateImage("This demo shows every execution of a callback.")
local msg2 = font:generateImage("Press mouse buttons and keys and resize the window.")

-- a stack of messages
local messages = {}

-- after pushing a message, it is at the first position in the table 'messages'
local function push(message)
	table.insert(messages, 1, message)
	messages[11] = nil
end

main = {
	render = function(dt)
		font:print(10, 10, [[
This demo logs every execution of a callback.
(not including the update and render callbacks)
Press mouse buttons and keys and resize the window.]])
		for i=1,10 do
			if messages[i] then
				font:print(10, 390-i*30, messages[i])
			end
		end	
	end,
	
	resized = function(width, height)
		scrupp.init("Callback Demo", width, height, 32, false, true)
		push("window resized - new size: " .. width .. "x" .. height)
	end,
	
	mousepressed = function(x, y, button)
		push(button .. " button pressed at " .. x .. ", " .. y)
	end,
	
	mousereleased = function(x, y, button)
		push(button .. " button released at " .. x .. ", " .. y)
	end,
	
	keypressed = function(key, char)
		if key == "ESCAPE" then
			scrupp.exit()
		end
		if key ~= char and char ~= "" then
			push("key '" .. key .. "' (" .. char .. ") pressed")
		else
			push("key '" .. key .. "' pressed")
		end
	end,
	
	keyreleased = function(key)
		push("key '" .. key .. "' released")
	end
}
